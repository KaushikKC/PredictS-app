type Market @entity {
  id: ID!
  title: String!
  description: String!
  resolutionDate: BigInt!
  oracle: Bytes!
  creator: Bytes!
  winningOutcome: BigInt!
  totalPool: BigInt!
  yesPool: BigInt!
  noPool: BigInt!
  bets: [Bet!]! @derivedFrom(field: "market")
  isActive: Boolean!
  createdAt: BigInt!
}

type Bet @entity {
  id: ID!
  user: Bytes!
  market: Market!
  amount: BigInt!
  outcome: Boolean!
  timestamp: BigInt!
}

type User @entity {
  id: ID!
  bets: [Bet!]! @derivedFrom(field: "user")
  marketsCreated: [Market!]! @derivedFrom(field: "creator")
}

type BetPlaced @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  marketId: BigInt! # uint256
  amount: BigInt! # uint256
  outcome: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketActivated @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketCreated @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt! # uint256
  title: String! # string
  creator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketResolved @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt! # uint256
  winningOutcome: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PrizeDistributed @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt! # uint256
  winner: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
